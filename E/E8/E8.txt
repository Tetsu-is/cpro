---------------------------------------------------------
[E8] 第7章 文字列 に関する考察・感想用テンプレート
---------------------------------------------------------

課題： E8
学生番号：37022497 
氏名：石本 哲郎
作成日：5/30
-----------------------------------------------
(E8_1)

学習内容：
キーボードから入力された文字列の長さを表示するプログラムを作成した。


結果：
$ ./a.exe
メッセージを入力してください >>> abc
入力文字列: abc
, 文字数: 4

$ ./a.exe
メッセージを入力してください >>> abcd
入力文字列: abcd
, 文字数: 5

$ ./a.exe
メッセージを入力してください >>>
入力文字列:
, 文字数: 1


習得した内容・反省・考察など：
改行を１文字として数えているため入力した文字より
１文字多く数えていることが分かる。
-----------------------------------------------
(E8_2) 

学習内容：
 キーボードから入力された文字列の長さを表示するプログラムを作成した。

結果：
$ ./a.exe
メッセージを入力してください >>> abc
入力文字列: abc, 文字数: 3

$ ./a.exe
メッセージを入力してください >>> ab
入力文字列: ab, 文字数: 2

$ ./a.exe
メッセージを入力してください >>>
入力文字列: , 文字数: 0


習得した内容・反省・考察など：
getlineではファイルの終端または改行が来るまで、
文字列を繰り返し読み取りmessage配列に前から追加していく
という処理を行っていると考えられる。前問との相違点は、
getchar関数で一文ずつ文字を受け取る処理を繰り返し、
改行でループをbreakしていることである。これによって改行\nは
配列の要素に追加していないので入力した文字数と配列の要素数が
一致している。
-----------------------------------------------
(E8_3) 

学習内容：
標準関数 size_t strlen() を用いて，
キーボードから入力された文字列の長さを表示するプログラムを作成した。


結果：
$ ./a.exe
メッセージを入力してください >>> abc
メッセージの長さは 3 文字です。


習得した内容・反省・考察など：
入力した文字の文字列の長さを出力する点は同じであるが、
用いている関数が異なる。全問ではstr_lengthという自作の関数を
用いていたのに対して本問ではｃ言語の標準ライブラリのstrlen関数を
用いてる。そのため出力形式に合わせるためにキャストを加えている。
-----------------------------------------------
(E8_4) 

学習内容：
キーボードから入力された2個の単語を辞書順に表示するプログラムを作成した。

結果：
$ ./a.exe
文字列１を入力してください >>> apple
文字列２を入力してください >>> ant
2
文字列１と文字列２は異なります。

$ ./a.exe
文字列１を入力してください >>> apple
文字列２を入力してください >>> apple
0
文字列１と文字列２は同じです。

$ ./a.exe
文字列１を入力してください >>> ant
文字列２を入力してください >>> apple
-2
文字列１と文字列２は異なります。



習得した内容・反省・考察など：
　文字コードは辞書順に数字が大きくなるので、
文字列を順に比較していき、文字コードの差を取ったときに
辞書順で後のものがtxt1,先のものがtxt2になるとき正になる。
同じものがtxt1,txt2になるときは差は０となる。
また辞書順で先のものがtxt1,後のものがtxt2に入る場合は
差は負になる。
　関数 str_compareでは二つの文字列のどちらかに終端が現れるまで
繰り返すforループとなっており、文字列の１文字目から順に文字コードを使って
比較している。また差が０出ないときにループを止めて差を返すようになっている。
これは文字列を１文字目から比べていき、同じ文字であれば次の文字を比較し、
異なる文字が現れたらその差を返して処理を終えることを示す。
-----------------------------------------------
(E8_5) 

学習内容：strcmp( ) の戻り値に基づいて
辞書順に表示するプログラムを作成した。

結果：
$ ./a.exe
文字列１を入力してください >>> aaaa
文字列２を入力してください >>> aaab
aaaa
, aaab

$ ./a.exe
文字列１を入力してください >>> aaab
文字列２を入力してください >>> aaaa
aaaa
, aaab

$ ./a.exe
文字列１を入力してください >>> aaaa
文字列２を入力してください >>> aaaa
aaaa


習得した内容・反省・考察など：
strcmp関数は前問の関数と同じ処理を行うことが分かった。
-----------------------------------------------
(E8_6) 

学習内容：
配列に格納された文字列を
別の配列にコピーするプログラムを作成した。

結果：
$ ./a.exe
コピー前：str1 = dog, str2 = cat
コピー後：str1 = cat, str2 = cat


$ ./a.exe
コピー前：str2 = cat, str3 = lion


$ ./a.exe
コピー前：str2 = cat, str3 = lion
コピー後：str2 = lion, str3 = lion

習得した内容・反省・考察など：
　リスト７．１１では終端が来るまでループで文字列型配列
str1にstr2の文字を一文字ずつ順に代入している。

-----------------------------------------------
(E8_7) 

学習内容：
2個の文字列を連結して別の配列に格納するプログラムを作成した。

結果：
$ ./a.exe
challenge = flash.
password = thunder.
countersign =
--> countersign = flash.thunder.


challenge = flash.
password = thunder.
countersign =
--> countersign = flash.thunder.
challenge = flash.
password = thunder.
countersign = ▒▒▒▒
--> countersign = thunder.flash.





習得した内容・反省・考察など：
　関数str_cpyは配列signに配列word1をコピーしている。
関数str_catは一つ目のforループで現時点での配列signの文字列の長さを
取得することで二つ目のforループでword2をコピーし始めるときのスタート地点を
決めている。それによってword1の文字列の直後にword2の文字列が
並べている。
　
-----------------------------------------------
(E8_8) 

学習内容：
文字列が与えられたとき，
その長さと，その中に含まれる大文字，小文字，数字，
その他(の記号やスペースなど)，それぞれの個数を求めプログラムを作成した。

結果：
$ ./a.exe
I have 2 cats.
長さ 14, 大文字 1, 小文字 8, 数字 1, その他 4


習得した内容・反省・考察など：
char型変数の値で文字のグループ分けができることと、
getcharで入力された文字を文字型配列として格納できることを
用いて入力された文字の種類を判別し、それぞれの個数を
数えることができることが分かった。
-----------------------------------------------
(E8_9) 

学習内容：

結果：

習得した内容・反省・考察など：
　str関数は文字列を頭から数えていき、終端が現れたところで打ち切る
ので文字列の終端を除いた文字だけの数を数える。
文字列型配列のindexは0から始まるのでindexの値に文字数nを指定
すると文字列を1から数えた時のn+1番目に相当し、終端のnull文字を
指すことになるのでNULL文字の位置を求めることができる。
-----------------------------------------------
(E8_10*) 

学習内容：
文字列を判定するプログラムを作成した。
課題の２番まで取り組んだ。

結果：
(10_1)
tetsu@LAPTOP-EVCO2A2C ~/programing2/e/e8
$ ./a.exe
This
始まっている

tetsu@LAPTOP-EVCO2A2C ~/programing2/e/e8
$ ./a.exe
apple
始まっていない

tetsu@LAPTOP-EVCO2A2C ~/programing2/e/e8
$ ./a.exe
is
始まっていない

tetsu@LAPTOP-EVCO2A2C ~/programing2/e/e8
$ ./a.exe
banana
始まっていない

tetsu@LAPTOP-EVCO2A2C ~/programing2/e/e8
$ ./a.exe
pencil
始まっていない


(10_2)
tetsu@LAPTOP-EVCO2A2C ~/programing2/e/e8
$ ./a.exe
This
sentence -> This is a pen. That is an apple.
str -> This
含まれている

tetsu@LAPTOP-EVCO2A2C ~/programing2/e/e8
$ ./a.exe
apple
sentence -> This is a pen. That is an apple.
str -> apple
含まれていない

tetsu@LAPTOP-EVCO2A2C ~/programing2/e/e8
$ ./a.exe
is
sentence -> This is a pen. That is an apple.
str -> is
含まれている

tetsu@LAPTOP-EVCO2A2C ~/programing2/e/e8
$ ./a.exe
banana
sentence -> This is a pen. That is an apple.
str -> banana
含まれていない

tetsu@LAPTOP-EVCO2A2C ~/programing2/e/e8
$ ./a.exe
pencil
sentence -> This is a pen. That is an apple.
str -> pencil
含まれていない



習得した内容・反省・考察など：
文字列の比較を使うことで任意の文字列が含まれているかを
判定できることが分かった。またbool型を用いて、条件を満たすかどうか
を格納しfor文を回すことで簡潔に書けることが分かった。
-----------------------------------------------
[E8] 全体に対する感想などを以下に記すこと．
今回は時間がかかって大変でした。
所要時間： （ ４ ）時間
